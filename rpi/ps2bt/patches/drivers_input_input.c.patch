--- ./original/input.c	2015-07-27 09:21:00.000000000 -0400
+++ ./input.c	2015-08-27 21:01:08.000000000 -0400
@@ -215,49 +215,15 @@
 static int input_handle_abs_event(struct input_dev *dev,
 				  unsigned int code, int *pval)
 {
-	struct input_mt *mt = dev->mt;
-	bool is_mt_event;
 	int *pold;
 
-	if (code == ABS_MT_SLOT) {
-		/*
-		 * "Stage" the event; we'll flush it later, when we
-		 * get actual touch data.
-		 */
-		if (mt && *pval >= 0 && *pval < mt->num_slots)
-			mt->slot = *pval;
+	pold = &dev->absinfo[code].value;
 
-		return INPUT_IGNORE_EVENT;
-	}
+	*pval = input_defuzz_abs_event(*pval, *pold, dev->absinfo[code].fuzz);
 
-	is_mt_event = input_is_mt_value(code);
+	if (*pold == *pval) return INPUT_IGNORE_EVENT;
 
-	if (!is_mt_event) {
-		pold = &dev->absinfo[code].value;
-	} else if (mt) {
-		pold = &mt->slots[mt->slot].abs[code - ABS_MT_FIRST];
-	} else {
-		/*
-		 * Bypass filtering for multi-touch events when
-		 * not employing slots.
-		 */
-		pold = NULL;
-	}
-
-	if (pold) {
-		*pval = input_defuzz_abs_event(*pval, *pold,
-						dev->absinfo[code].fuzz);
-		if (*pold == *pval)
-			return INPUT_IGNORE_EVENT;
-
-		*pold = *pval;
-	}
-
-	/* Flush pending "slot" event */
-	if (is_mt_event && mt && mt->slot != input_abs_get_val(dev, ABS_MT_SLOT)) {
-		input_abs_set_val(dev, ABS_MT_SLOT, mt->slot);
-		return INPUT_PASS_TO_HANDLERS | INPUT_SLOT;
-	}
+	*pold = *pval;
 
 	return INPUT_PASS_TO_HANDLERS;
 }
